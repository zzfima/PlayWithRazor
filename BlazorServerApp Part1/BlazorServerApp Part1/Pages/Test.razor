@page "/test"
@page "/sample"

<h3>Test</h3>

@* call function *@
<h3>@getCounter()</h3>

@* using event handler *@
<button class="btn btn-primary" @onclick="removeOne">Remove 1</button>

@* using lambda function *@
<button class="btn btn-primary" @onclick=@(()=>num++)>Add 1</button>

@* using inline calculations *@
<h3>Counter * 2: @(2 * num)</h3>

@* using conditions *@
@if (num % 2 == 0)
    parity = "even";
else
    parity = "odd";

<h3>Parity: @parity</h3>

@* using for loop *@
@for (int i = 0; i < 3; i++)
{
    <p>I = @i</p>
}

@* using foreach *@
@foreach (var item in names)
{
    @* using MarkupString to show html tags*@
    <p>name: @((MarkupString)item)</p>
}


@code {
    private string parity = string.Empty;
    private int num = 44;
    private void removeOne() => num--;
    private string getCounter() => $"counter = {num}";
    private List<string> names = new List<string> { "<b>Alex</b>", "Vasil" };

    //called before foreach
    protected override void OnInitialized()
    {
        base.OnInitialized();

        names.Add("<i>Mashka</i>");
    }

    //called after foreach
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        names.Add("Mike");
    }
}
